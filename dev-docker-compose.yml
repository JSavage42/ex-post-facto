version: '3'

services:
  client:
    build:
      context: ./src
      dockerfile: Dockerfile-client
    environment:
      - REACT_APP_PORT=3000
      - CHOKIDAR_USEPOLLING=true
      - MONGO_URL=http://localhost
      - MONGO_PORT=5000
    ports:
      - 8080:80
    networks:
      - app
    volumes:
      - ./src/client:/app/client
      - ./src/client/public:/app/client/public
      - ./src/client/node_modules:/app/client/node_modules
    links:
      - server
    command: npm run start
    restart: on-failure
  server:
    build: 
      context: ./src/server
      dockerfile: Dockerfile-sever
    environment:
      - MONGO_URI=mongodb://localhost:27017/epf-db
      - SERVER_PORT=5000
      - JWT_SECRET=secretsecret
      - JWT_EXPIRY=30d
      - DEBUG=worker:*
      - MORGAN=combined
      - NODE_ENV=development
    ports:
      - 8082:80
    networks:
      - app
      - mongo
    volumes:
      - ./src/server:/app/server
    restart: on-failure
  sockets:
    build: ./sockets
    volumes:
      - ./src/sockets/src:/project
    ports:
      - 8083:80
    networks:
      - app
      - mongo
    restart: on-failure
  mongo_1:
    image: mongo
    command: mongod --replSet appReplicaSet
    volumes:
      - ./src/mongo/rs_config.js:/docker-entrypoint-initdb.d/rs_config.js
    networks:
      - mongo
    extra_hosts:
      - "mongo_1:127.0.0.1"
    restart: on-failure
  mongo_2:
    image: mongo
    command: mongod --replySet appReplicaSet
    networks:
      - mongo
    restart: on-failure
  mongo_3:
    image: 4
    command: mongod --replSet appReplicaSet
    networks:
      - mongo
    restart: on-failure
    mongo_express:
      image: mongo-express
      environment:
        ME_CONFIG_MONGODB_SERVER: "mongo_1,mongo_2,mongo3"
      ports:
        - 8081:8081
      networks:
        - mongo
      restart: on-failure

networks:
  app:
  mongo:
